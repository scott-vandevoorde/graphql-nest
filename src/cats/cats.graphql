directive @constraint(minLength: Int, maxLength: Int, startsWith: String, endsWith: String, contains: String, notContains: String, pattern: String, format: String, min: Float, max: Float, exclusiveMin: Float, exclusiveMax: Float, multipleOf: Float, uniqueTypeName: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type Cat {
  _id: String!
  name: String!
  age: Int! @constraint(min: 0, max: 30)
}

type CatResponse_Success {
  cat: Cat!
}

type CatResponse_Failure {
  error: String!
}

type CatResponse_UserNotFound {
  error: String
  userName: String!
}

input CreateCatInput {
  _id: String
  name: String! 
  age: Int! @constraint(min: 0, max: 30)
}

input UpdateCatInput {
  _id: String!
}

type Query {
  cats(_id: [String!]): [Cat]
  cat(_id: String!): Cat
}

type Mutation {
  createCat(createCatInput: CreateCatInput!): CatResponse!
  #updateCat(updateCatInput: UpdateCatInput!): CatResponse!
  #removeCat(_id: Int!): CatResponse
}

union CatResponse =
    CatResponse_Success
  | CatResponse_Failure
